{
  "code_v_0": "Цей метод обробляє лише ті елементи, які знаходяться на тому ж рівні вкладеності, що й тег <h1>, і йдуть після нього. Це корисно, коли ви хочете зібрати контент, який безпосередньо слідує за заголовком <h1> на сторінці, без врахування вкладених елементів.\n\n",
  "code_v_1": "Цей метод обробляє всі елементи, які йдуть після тега <h1>, включаючи всі вкладені елементи. Це корисно для збору всього контенту, що слідує за заголовком <h1>, незалежно від рівня вкладеності. Проте, цей метод може створювати проблеми з вкладеністю та непередбачуваними результатами, якщо HTML-структура складна.",
  "code_v_2": "Цей метод використовує бібліотеку readability для очищення HTML-коду і отримання основного текстового контенту статті. Це корисно для витягання читабельного тексту зі статті, ігноруючи менші деталі та рекламу. Також цей метод додає зображення до очищеного контенту, щоб зберегти повний вигляд статті.",
  "parser_type_https": "Цей метод робить запит на сторінку через HTTPS, не включаючи JavaScript. Це підходить для сайтів, де основний контент доступний без необхідності виконання JavaScript-коду, і ви хочете швидко отримати статичний HTML-контент. Асинхронний процес означає, що запити виконуються паралельно, що дозволяє обробляти кілька запитів одночасно без блокування основного потоку виконання.",
  "parser_type_Selenium": "Цей метод використовує браузер Chrome для відкриття сторінки та виконання JavaScript-коду. Це підходить для сайтів, де контент завантажується динамічно через JavaScript, і ви хочете зібрати всі дані, включаючи ті, що завантажуються пізніше."
}
